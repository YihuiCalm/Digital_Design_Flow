#!/bin/bash

# a simple bash script for Cadence Innovus

echo "Innovus Plance & Route Control Script"

# read cap_table, target_library and library_search_path from ../lib/lib_path
target_library=$(grep '^target_library=' ../lib/lib_path | cut -d'=' -f2)
library_search_path=$(grep '^library_search_path=' ../lib/lib_path | cut -d'=' -f2)
cap_table=$(grep '^cap_table=' ../lib/lib_path | cut -d'=' -f2)
clockBufName=$(grep '^clockBufName=' ../lib/lib_path | cut -d'=' -f2)
fillerCells=$(grep '^fillerCells=' ../lib/lib_path | cut -d'=' -f2)
lef=$(grep '^lef=' ../lib/lib_path | cut -d'=' -f2)
if [ -z "$target_library" ]; then echo "Error: target_library not found in ../lib/lib_path." ; exit 1 ; fi
if [ -z "$library_search_path" ]; then echo "Error: library_search_path not found in ../lib/lib_path." ; exit 1 ; fi
if [ -z "$cap_table" ]; then echo "Error: cap_table not found in ../lib/lib_path." ; exit 1; fi
if [ -z "$clockBufName" ]; then echo "Error: clockBufName not found in ../lib/lib_path." ; exit 1; fi
if [ -z "$fillerCells" ]; then echo "Error: fillerCells not found in ../lib/lib_path." ; exit 1; fi
if [ -z "$lef" ]; then echo "Error: lef not found in ../lib/lib_path." ; exit 1; fi

# reset control variables
gui=0
topmodule=""
newtopflag=0
top=0

# read and process input arguments
for arg in $@
do
    if [ "$arg" == "-gui" ]
    then
	gui=1
    elif [ $newtopflag == 1 ]
    then
	topmodule=$arg
	newtopflag=0
    elif [ "$arg" == "-top" ]
    then
	newtopflag=1
        top=1
    fi
done

echo ""
pushd work

# Create the Default.view file with the correct .sdc file path
cat > ../scripts/Default.view <<EOF
# Version:1.0 MMMC View Definition File
# Do Not Remove Above Line
create_rc_corner -name rc -cap_table {${cap_table}} -preRoute_res {1.0} -preRoute_cap {1.0} -preRoute_clkres {0.0} -preRoute_clkcap {0.0} -postRoute_res {1.0} -postRoute_cap {1.0} -postRoute_xcap {1.0} -postRoute_clkres {0.0} -postRoute_clkcap {0.0}
create_library_set -name libSTD -timing {${library_search_path}/${target_library}.lib}
create_constraint_mode -name Constraints -sdc_files {../../synthesis/work/output/${topmodule}_syn.sdc}
create_delay_corner -name Delay -library_set {libSTD} -rc_corner {rc}
create_analysis_view -name Default -constraint_mode {Constraints} -delay_corner {Delay}
set_analysis_view -setup {Default} -hold {Default}
EOF

if [ $gui == 1 ]
then
   if [ $top == 1 ]
   then
      innovus -execute "win; set BASENAME $topmodule; set init_lef_file ${lef}; set fillerCells [list ${fillerCells}]; set clockBufName ${clockBufName}" -files ../scripts/top-level.tcl -log ../work/log/run.log -cmd ../work/log/run.cmd -overwrite
   else
      innovus
   fi
else
   if [ $top == 1 ]
   then
      innovus -execute "set BASENAME $topmodule; set init_lef_file ${lef} set fillerCells [list ${fillerCells}]; set clockBufName ${clockBufName}" -files ../scripts/top-level.tcl -log ../work/log/run.log -cmd ../work/log/run.cmd -overwrite -nowin
   else
      innovus -nowin
   fi
fi

popd


	
